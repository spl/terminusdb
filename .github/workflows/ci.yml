name: CI

on:
  push:
    branches:
    tags:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - LICENSE

# Prevent redundant workflows triggered by push and pull_request events.
concurrency:
  group: ci-${{ github.sha }}
  cancel-in-progress: true

jobs:

  build:
    name: Build
    uses: ./.github/workflows/build.yml

  check:
    name: Check
    needs: build
    uses: ./.github/workflows/check.yml

  benchmark:
    name: Benchmark
    needs: build
    uses: ./.github/workflows/benchmark.yml

  # This is required for status checks.
  all_checks_pass:
    name: All checks pass
    runs-on: ubuntu-latest
    needs: check
    steps:
      - run: echo "Celebrate! ðŸ¥³"

  push:
    name: Push Docker image
    runs-on: ubuntu-latest
    needs: all_checks_pass
    if: |
      github.repository == 'spl/terminusdb' &&
      github.event_name == 'push' && (
        github.ref == 'refs/heads/main' ||
        startsWith(github.ref, 'refs/tags/v')
      )

    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v2
        with:
          name: terminusdb-server-docker-image

      - name: Push image to Docker Container Registry
        run: |
          #echo '${{ secrets.DOCKER_PASS }}' | docker login -u terminusdb --password-stdin

          # Strip git ref prefix from version
          VERSION=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `dev` tag convention for main branch
          [ "$VERSION" == "main" ] && VERSION=dev

          docker load < terminusdb-server-docker-image.tar.gz

          # Image identifiers
          LOCAL_IMAGE=terminusdb/terminusdb-server:local
          VERSION_IMAGE=terminusdb/terminusdb-server:$VERSION
          DEV_COMMIT_IMAGE=terminusdb/terminusdb-server:$VERSION-$GITHUB_SHA
          LATEST_IMAGE=terminusdb/terminusdb-server:latest

          # Tag and push the version image
          echo "docker tag $LOCAL_IMAGE $VERSION_IMAGE"
          echo "docker push $VERSION_IMAGE"

          # Tag and push the dev-commit image. This is removed later.
          if [ "$VERSION" == "dev" ]; then
            echo "docker tag $LOCAL_IMAGE $DEV_COMMIT_IMAGE"
            echo "docker push $DEV_COMMIT_IMAGE"
          fi

          # Tag and push the latest image when a version tag is pushed
          if [ $(echo "$GITHUB_REF" | grep "refs/tags/v") ]; then
             echo "docker tag $LOCAL_IMAGE $LATEST_IMAGE"
             echo "docker push $LATEST_IMAGE"
          fi

  enterprise:
    name: Trigger enterprise build
    runs-on: ubuntu-latest
    needs: push
    if: |
      github.repository == 'terminusdb/terminusdb' &&
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'

    steps:
      - name: Run
        run: |
          curl https://api.github.com/repos/${{ secrets.ENTERPRISE_REPO_OWNER }}/${{ secrets.ENTERPRISE_REPO }}/dispatches \
            -X POST \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -u rrooij:${{ secrets.PAT }} -d '{ "event_type": "Trigger from community" }'
